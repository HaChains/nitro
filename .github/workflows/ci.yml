name: Go tests CI
run-name: Go tests CI triggered from @${{ github.actor }} of ${{ github.head_ref }}

on:
  workflow_dispatch:
  merge_group:
  pull_request:
  push:
    branches:
      - master
      - develop

jobs:
  test:
    name: Go Tests
    runs-on: ubuntu-8

    strategy:
      fail-fast: false
      matrix:
        test-mode: [defaults, race]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt update && sudo apt install -y wabt gotestsum

      - name: Install go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x

      - name: Cache Build Products
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ matrix.test-mode }}
          restore-keys: ${{ runner.os }}-go-

      - name: Build
        run: make build test-go-deps -j

      - name: Set environment variables
        run: |
          mkdir -p target/tmp/deadbeefbee
          echo "TMPDIR=$(pwd)/target/tmp/deadbeefbee" >> "$GITHUB_ENV"
          echo "GOMEMLIMIT=6GiB" >> "$GITHUB_ENV"
          echo "GOGC=80" >> "$GITHUB_ENV"

      - name: run tests without race detection
        if: matrix.test-mode == 'defaults'
        run: |
          packages=`go list ./...`
          stdbuf -oL gotestsum --format short-verbose --packages=github.com/offchainlabs/nitro/cmd/N --rerun-fails=1 --no-color=false -- ./cmd/N/... -coverprofile=coverage.txt -covermode=atomic -coverpkg=./cmd/N/... -timeout 20m -parallel=8 -tags=cionly > >(stdbuf -oL tee full.log | grep -vE "INFO|seal")

      - name: run tests with race detection
        if: matrix.test-mode == 'race'
        run: |
          packages=`go list ./...`
          stdbuf -oL gotestsum --format short-verbose --packages=github.com/offchainlabs/nitro/cmd/N --rerun-fails=1 --no-color=false -- ./cmd/N/... -race -timeout 30m -parallel=8 > >(stdbuf -oL tee full.log | grep -vE "INFO|seal")

      - name: Archive detailed run log
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.test-mode }}-full.log
          path: full.log

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        if: matrix.test-mode == 'defaults'
        with:
          fail_ci_if_error: false
          files: ./coverage.txt,./coverage-redis.txt
          verbose: false
          token: ${{ secrets.CODECOV_TOKEN }}

